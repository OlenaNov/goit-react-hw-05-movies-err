{"version":3,"file":"static/js/783.d638b5d6.chunk.js","mappings":"6TAGaA,EAAOC,EAAAA,GAAAA,GAAH,+CAIJC,EAAOD,EAAAA,GAAAA,GAAH,2CAIJE,GAAaF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,yE,SCWvB,EAnB0B,SAAC,GAAe,IAAbI,EAAY,EAAZA,MACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,SAACP,EAAD,UACCK,EAAMG,KAAI,SAAAC,GAAI,OACX,SAACP,EAAD,WACI,SAACC,EAAD,CACIO,GAAE,iBAAYD,EAAKE,IACnBC,MAAO,CAAEC,KAAMP,GAFnB,SAIKG,EAAKK,SALHL,EAAKE,GADL,KAYtB,ECsBD,EArCa,WACT,OAA0CI,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,mCAAM,6FACFC,EAAa,IAAIC,gBADf,SAIJH,GAAa,GAJT,UAKmBI,EAAAA,EAAAA,GAAW,wBAAyBF,GALvD,OAKEG,EALF,OAMJP,GAAiB,OAAIO,EAASC,UAN1B,gDASJC,QAAQC,IAAI,uDATR,yBAYJR,GAAa,GAZT,+CAgBD,WACHO,QAAQC,IAAI,UACZN,EAAWO,QACXF,QAAQC,IAAI,QACf,IApBO,8DAAN,GAqBH,KAGH,gCACKT,IAAa,SAAC,IAAD,CAAYW,MAAM,YAC/Bb,EAAcc,QACb,SAAC,EAAD,CAAmBzB,MAAOW,IAC1B,OAGb,C,2ECtCDe,IAAAA,SAAAA,QAAyB,6BACzB,IAGMR,EAAU,mCAAG,WAAOS,EAAaX,EAAYY,GAAhC,uFAEOF,IAAAA,IAAUC,EAAa,CACzCE,OAAQ,CACJC,QAPI,mCAQJd,WAAAA,EACAY,MAAAA,KANO,cAETG,EAFS,OASfV,QAAQC,IAAI,gBATG,kBAURS,EAAQC,MAVA,2CAAH,0DAehB,K","sources":["components/ListTrendingFilms/ListTrendingFilms.styled.js","components/ListTrendingFilms/ListTrendingFilms.jsx","pages/Home/Home.jsx","utilites/api.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const List = styled.ul`\n    list-style: none;\n`;\n\nexport const Item = styled.li`\n    padding: 8px;\n`;\n\nexport const LinkStyled = styled(Link)`\n    text-decoration: none;\n    color: #5252d4;\n`;\n","import { useLocation, } from \"react-router-dom\";\nimport { List, Item, LinkStyled } from \"./ListTrendingFilms.styled\";\n\nconst ListTrendingFilms = ({ items }) => {\n    const location = useLocation();\n\n    return (\n        <List>\n        {items.map(item => (\n            <Item key={item.id}>\n                <LinkStyled \n                    to={`movies/${item.id}`} \n                    state={{ from: location}}\n                    >\n                    {item.title}\n                </LinkStyled>\n            </Item>\n        ))}\n        </List> \n    )\n};\n\nexport default ListTrendingFilms;","import { useEffect, useState } from \"react\";\nimport SyncLoader from \"react-spinners/SyncLoader\";\nimport fetchFilms from '../../utilites/api';\nimport ListTrendingFilms from \"components/ListTrendingFilms\";\n\nconst Home = () => {\n    const [trendingFilms, setTrendingFilms] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => async () => {\n            const controller = new AbortController();\n            try {\n                \n                setIsLoading(true);\n                const response = await fetchFilms('/3/trending/movie/day', controller);\n                setTrendingFilms([...response.results]);\n\n            } catch (error) {\n                console.log('OOps! Error loading information. Please, try again!');\n            } \n            finally {\n                setIsLoading(false);\n            };\n\n            \n            return () => {\n                console.log('before');\n                controller.abort();\n                console.log('after');\n            };\n        }, []);\n\n    return (\n        <>\n            {isLoading && <SyncLoader color=\"#eb1736\" />}\n            {trendingFilms.length \n            ? <ListTrendingFilms items={trendingFilms} />\n            : null}\n        </>\n    );\n};\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '84bdbe2f4baecea0c1be28902afc6a5b';\n\n\nconst fetchFilms = async (typeRequest, controller, query) => {\n\n    const request = await axios.get(typeRequest, {\n        params: {\n            api_key: API_KEY,\n            controller,\n            query,\n        }\n    });\n    console.log('made request');\n    return request.data;\n};\n\n\n\nexport default fetchFilms;"],"names":["List","styled","Item","LinkStyled","Link","items","location","useLocation","map","item","to","id","state","from","title","useState","trendingFilms","setTrendingFilms","isLoading","setIsLoading","useEffect","controller","AbortController","fetchFilms","response","results","console","log","abort","color","length","axios","typeRequest","query","params","api_key","request","data"],"sourceRoot":""}